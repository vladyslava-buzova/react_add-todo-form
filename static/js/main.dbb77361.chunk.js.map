{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","userId","user","usersFromServer","find","el","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","App","useState","setTitle","setUserId","todoList","setTodoList","errorTitle","setErrorTitle","errorUser","setErrorUser","action","method","onSubmit","event","preventDefault","newTodoObj","Math","max","previous","onAdd","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dbb77361.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport usersFromServer from '../../api/users';\n\ntype Props = {\n  userId: number,\n};\n\nexport const UserInfo: React.FC<Props> = ({ userId }) => {\n  const user = usersFromServer.find(el => el.id === userId);\n\n  return (\n    <>\n      {user\n        && (\n          <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n            {user.name}\n          </a>\n        )}\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id, title, userId, completed,\n  } = todo;\n\n  return (\n    <li\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo userId={userId} />\n    </li>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[],\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <ul className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} />\n    ))}\n  </ul>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): Users | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState('');\n  const [todoList, setTodoList] = useState(todos);\n  const [errorTitle, setErrorTitle] = useState(false);\n  const [errorUser, setErrorUser] = useState(false);\n\n  const onAdd = () => {\n    const newTodoObj = {\n      id: Math.max(...todoList.map(todo => todo.id)) + 1,\n      title,\n      completed: false,\n      userId: +userId,\n    };\n\n    setTodoList(previous => {\n      return [...previous, newTodoObj];\n    });\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setErrorUser(!userId);\n    setErrorTitle(!title);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    onAdd();\n\n    setTitle('');\n    setUserId('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              name=\"title\"\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setErrorTitle(false);\n              }}\n            />\n          </label>\n          {errorTitle && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              name=\"userId\"\n              data-cy=\"userSelect\"\n              value={userId}\n              onChange={(event) => {\n                setUserId(event.target.value);\n                setErrorUser(false);\n              }}\n            >\n              <option\n                value=\"\"\n                disabled\n              >\n                Choose a user\n              </option>\n\n              {usersFromServer.map(user => (\n                <option\n                  key={user.id}\n                  value={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {errorUser && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          className=\"button is-primary\"\n\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todoList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}